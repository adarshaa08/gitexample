#include "database.h"

bool Database::createTable()
{
    bool ret = false;


    if(db.open())
    {
        QSqlQuery query;
        if(!query.exec("CREATE TABLE IF NOT EXISTS AEPSBankMaster (IFSC NOT NULL, ImpsStatus NOT NULL, BankName NOT NULL, IsActive NOT NULL, VerifyStatus NOT NULL, DefaultIIFSCCode NOT NULL, AEPSStatus NOT NULL, NBIN NOT NULL, NBINStatus NOT NULL, DefaultIFSCStatus NOT NULL, IMPSNBIN NOT NULL)"))
            qDebug() << "1. " << query.lastError();
        if(!query.exec("CREATE TABLE IF NOT EXISTS GetProfile     (ProfileTypeID NOT NULL, TransactionTypeID NOT NULL, TransactionType NOT NULL, TransactionTypeName NOT NULL, PerTransactionLimit NOT NULL, MinTransLimit NOT NULL, MaxTransLimit NOT NULL, AuthTypeID NOT NULL, AuthTypeName NOT NULL, ProductTypeID NOT NULL, Status NOT NULL, IsFinancial NOT NULL, Denomination NOT NULL, IsSplit NOT NULL, NoofRetry NOT NULL, FallBackAuth NOT NULL, DMSId NOT NULL, PageUrl NOT NULL, RFU NOT NULL, UserGrossLimit NOT NULL, NoofFallBack NOT NULL, CashContributionStatus NOT NULL, IsOnlyWalkin NOT NULL)"))
            qDebug() << "2. " << query.lastError();
        if(!query.exec("CREATE TABLE IF NOT EXISTS LST            (X_CORRELATION_ID NOT NULL)"))
            qDebug() << "3. " << query.lastError();
        if(!query.exec("CREATE TABLE IF NOT EXISTS AUTOLTS        (X_CORRELATION_ID TEXT,  TransactionTypeName TEXT, Date TEXT, Time TEXT, RRN TEXT, TxnAmt TEXT, TxnStatus TEXT, ALTSYesNo TEXT,AadharNo TEXT,Bankname TEXT)"))
            qDebug() << "4. " << query.lastError();
        else
            query.exec("INSERT INTO AUTOLTS                       (ALTSYesNo) VALUES('N')");

        if(!query.exec("CREATE TABLE IF NOT EXISTS LastData       (LAST_USER_ID TEXT)"))
            qDebug() << "5. " << query.lastError();

        if(!query.exec("CREATE TABLE IF NOT EXISTS LastWithdrawalData  (LAST_RRN TEXT, LAST_DATE)"))
            qDebug() << "6. " << query.lastError();
        if(!query.exec("CREATE TABLE IF NOT EXISTS imps_mapping (IFSC  NOT NULL, IMPS_STATUS NOT NULL, DEFAULT_IFSCSTATUS NOT NULL, BANK_NAME NOT NULL, IS_ACTIVE NOT NULL, VERIFY_STATUS NOT NULL, DEFAULT_IIFSCCODE NOT NULL, AEPSSTATUS NOT NULL, NBIN NOT NULL, NBINSTATUS NOT NULL, AEPSBANK_ORDER NOT NULL, AEPSICON NOT NULL)"))
            qDebug() << "7. " << query.lastError();

        if(!query.exec("CREATE TABLE IF NOT EXISTS state (STATE__CODE  NOT NULL,STATE__NAME  NOT NULL,COUNTRY__CODE  NOT NULL,FLAG1  NOT NULL,FLAG2  NOT NULL,FLAG3  NOT NULL)"))
            qDebug() << "8. " << query.lastError();

        if(!query.exec("CREATE TABLE IF NOT EXISTS district (STATE__CODE  NOT NULL,DISTRICT__NAME  NOT NULL,DISTRICT__CODE  NOT NULL,FLAG1  NOT NULL,FLAG2  NOT NULL,FLAG3  NOT NULL)"))
            qDebug() << "9. " << query.lastError();

        if(!query.exec("CREATE TABLE IF NOT EXISTS branch (BRANCH_ID INTEGER,BRANCH_CODE  NOT NULL,BRANCH_NAME  NOT NULL,BLOCK  NOT NULL,STATE  NOT NULL,DISTRICT  NOT NULL,CITY  NOT NULL,STATE_CODE  NOT NULL,STATUS INTEGER,RFU1  NOT NULL,RFU2  NOT NULL,RFU3  NOT NULL,RFU4  NOT NULL,RFU5  NOT NULL)"))
            qDebug() << "10. " << query.lastError();

        if(!query.exec("CREATE TABLE IF NOT EXISTS PROFILE_TYPE_TRANSACTION (PROFILE_TYPE_ID  NOT NULL,USER_TYPE_ID  NOT NULL,USER_TYPE_NAME  NOT NULL,PER_TRANSACTION_LIMIT REAL,USER_GROSS_LIMIT REAL,TRANSACTION_TYPE_ID  NOT NULL,TRANSACTION_TYPE  NOT NULL,MIN_TRANS_LIMIT REAL,MAX_TRANS_LIMIT REAL,AUTH_TYPE_ID  NOT NULL,AUTH_TYPE_NAME  NOT NULL,PRODUCT_TYPE_ID  NOT NULL,DENOMINATION INTEGER,RFU1  NOT NULL,NOOF_RETRY  NOT NULL,FALL_BACK_AUTH  NOT NULL,DMSID  NOT NULL,RFU2  NOT NULL,RFU3  NOT NULL)"))
            qDebug() << "11. " << query.lastError();

        if(!query.exec("CREATE TABLE IF NOT EXISTS BILLER_DETAILS (MODE TEXT,MODE__ID TEXT,BILLER__CODE TEXT,BILLER__ID TEXT,BILLER__NAME TEXT,SUBCATEGORY TEXT,LOCATION TEXT,CHARGES TEXT,FLAG1 TEXT,FLAG2 TEXT,FLAG3 TEXT,PARTIALPAY TEXT)"))
          qDebug() << "12. " << query.lastError();

        if(!query.exec("CREATE TABLE IF NOT EXISTS FIELD_DETAILS (BILLER__CODE TEXT,FIELD__ID TEXT,FIELD__NAME TEXT,FIELD__TYPE TEXT,FIELD__LENGTH TEXT,FIELD__VISIBILITY TEXT,FIELD__MIN__LENGTH TEXT,FIELD__VALIDATION TEXT,FLAG1 TEXT,FLAG2 TEXT,FLAG3 TEXT)"))
          qDebug() << "13. " << query.lastError();

        if(!query.exec("CREATE TABLE IF NOT EXISTS REVERSAL_TXN (SEQUENCE_NO TEXT,CHANNEL_ID TEXT,REFERENCE_NO TEXT,TXN_DATE TEXT,AMOUNT REAL,TRANSACTION_TYPE TEXT,PARENT_TXN_ID TEXT,CHARGE_AMOUNT REAL,ORIGINAL_SEQ_NO TEXT,PRODUCT TEXT,CUSTOMER_NO TEXT,ACCOUNT_NO TEXT,BRANCH TEXT,USER_ID TEXT,STATUS TEXT,REVERSAL_FLAG TEXT,NARRATIVE TEXT,TXN_TIME TEXT,CUSTOMER_NAME TEXT,CUSTOMER_MOBILE TEXT,SPLIT_SEQUENCE TEXT,DEBIT_CREDIT TEXT,PAYOUT_AMOUNT TEXT,COMMISSION_AMOUNT TEXT,TDSAMOUNT TEXT,RFU_DATE_DESC TEXT,RFU_DATE_VAL TEXT,RFU_NUMERIC1_DESC TEXT,RFU_NUMERIC1_VAL TEXT,RFU_NUMERIC2_DESC TEXT,RFU_NUMERIC2_VAL TEXT,RFU_NUMERIC3_DESC TEXT,RFU_NUMERIC3_VAL TEXT,RFU_NUMERIC4_DESC TEXT,RFU_NUMERIC4_VAL TEXT,RFU_TEXT1_DESC TEXT,RFU_TEXT1_VAL TEXT,RFU_TEXT2_DESC TEXT,RFU_TEXT2_VAL TEXT,RFU_TEXT3_DESC TEXT,RFU_TEXT3_VAL TEXT,RFU_TEXT4_DESC TEXT,RFU_TEXT4_VAL TEXT,RFU_TEXT5_DESC TEXT,RFU_TEXT5_VAL TEXT,RFU_TEXT6_DESC TEXT,RFU_TEXT6_VAL TEXT,RFU_TEXT7_DESC TEXT,RFU_TEXT7_VAL TEXT,RFU_TEXT8_DESC TEXT,RFU_TEXT8_VAL TEXT,RFU_TEXT9_DESC TEXT,RFU_TEXT9_VAL TEXT,RFU_TEXT10_DESC TEXT,RFU_TEXT10_VAL TEXT,PARENT_TXN_AMOUNT_CUR TEXT,CHARGE_AMOUNT_CUR TEXT,PARENT_TXN_AMOUNT TEXT)"))
          qDebug() << "14. " << query.lastError();

        if(!query.exec("CREATE TABLE IF NOT EXISTS DETAILED_STATEMENT (TRANTYPE TEXT,CHANNEL TEXT,DATE TEXT,CUSTOMER_NO TEXT,ACCOUNT_NO TEXT,AMOUNT TEXT,BRANCH TEXT,USER_ID TEXT,SEQUENCE_NO TEXT,REFERENCE_NO TEXT,REVERSAL_FLAG TEXT,NARRATIVE TEXT,TIME TEXT,CUSTOMER_NAME TEXT,CUSTOMER_MOBILE TEXT,SPLIT_SEQUENCE TEXT,DEBIT_CREDIT TEXT,CHARGE_AMOUNT TEXT,PAYOUT_AMOUNT TEXT,COMMISSION_AMOUNT TEXT,TDS_AMOUNT TEXT,ORIGINAL_SEQUENCE_NO TEXT,PARENT_TXN_ID TEXT,PARENT_TXN_AMOUNT TEXT,PARENT_TXN_AMOUNT_CUR TEXT,CHARGE_AMOUNT_CUR TEXT,TRANSACTION_TYPE_NAME TEXT,TRANSACTION_TYPE_PRODUCT TEXT,TRANSACTION_TYPE_DESCRIPTION TEXT,TRANSACTION_TYPE TEXT,STATUS TEXT,STATUS_DESC TEXT,RFU_DATE_DESC TEXT,RFU_DATE_VAL TEXT,RFU_NUMERIC1_DESC TEXT,RFU_NUMERIC1_VAL TEXT,RFU_NUMERIC2_DESC TEXT,RFU_NUMERIC2_VAL TEXT,RFU_NUMERIC3_DESC TEXT,RFU_NUMERIC3_VAL TEXT,RFU_NUMERIC4_DESC TEXT,RFU_NUMERIC4_VAL TEXT,RFU_TEXT1_DESC TEXT,RFU_TEXT1_VAL TEXT,RFU_TEXT2_DESC TEXT,RFU_TEXT2_VAL TEXT,RFU_TEXT3_DESC TEXT,RFU_TEXT3_VAL TEXT,RFU_TEXT4_DESC TEXT,RFU_TEXT4_VAL TEXT,RFU_TEXT5_DESC TEXT,RFU_TEXT5_VAL TEXT,RFU_TEXT6_DESC TEXT,RFU_TEXT6_VAL TEXT,RFU_TEXT7_DESC TEXT,RFU_TEXT7_VAL TEXT,RFU_TEXT8_DESC TEXT,RFU_TEXT8_VAL TEXT,RFU_TEXT9_DESC TEXT,RFU_TEXT9_VAL TEXT,RFU_TEXT10_DESC TEXT,RFU_TEXT10_VAL TEXT,DEBIT_AMOUNT TEXT,CREDIT_AMOUNT TEXT,CLSTATUS TEXT, RFU1 TEXT,RFU2 TEXT,RFU3 TEXT,SHOW_DETAILS INTEGER)")) // TS09072019
            qDebug() << "15." << query.lastError();

        if(!query.exec("CREATE TABLE IF NOT EXISTS MINISTATEMENT_TXN (SEQUENCE_NO TEXT,TRANSACTION_AMOUNT TEXT,TRANSACTION_DESC TEXT,DEBIT_CREDIT TEXT,TRANSACTION_DATE TEXT,TRANSACTION_TYPE TEXT,TRANSACTION_TYPE_NAME TEXT,TRANSACTION_TYPE_PRODUCT TEXT,TRANSACTION_TYPE_DESCRIPTION TEXT,RFUMAPPING TEXT,TIME TEXT,ORIGINAL_TXN_SEQUENCE TEXT,REFERENCE_ID TEXT,REVERSAL_FLAG TEXT,DEBIT_AMOUNT TEXT,CREDIT_AMOUNT TEXT,STATUS TEXT,STATUS_DESC TEXT, RFU_NUMERIC1_DESC TEXT,RFU_NUMERIC1_VAL TEXT,RFU_NUMERIC2_DESC TEXT,RFU_NUMERIC2_VAL TEXT,RFU_NUMERIC3_DESC TEXT,RFU_NUMERIC3_VAL TEXT,RFU_NUMERIC4_DESC TEXT,RFU_NUMERIC4_VAL TEXT,RFU_TEXT11_DESC TEXT, RFU_TEXT11_VAL TEXT,RFU_TEXT2_DESC TEXT,RFU_TEXT2_VAL TEXT,RFU_TEXT3_DESC TEXT,RFU_TEXT3_VAL TEXT,RFU_TEXT4_DESC TEXT,RFU_TEXT4_VAL TEXT,RFU_TEXT5_DESC TEXT,RFU_TEXT5_VAL TEXT,RFU_TEXT6_DESC TEXT,RFU_TEXT6_VAL TEXT,RFU_TEXT7_DESC TEXT,RFU_TEXT7_VAL TEXT,RFU_TEXT8_DESC TEXT,RFU_TEXT8_VAL TEXT,RFU_TEXT9_DESC TEXT,RFU_TEXT9_VAL TEXT,RFU_TEXT10_DESC TEXT,RFU_TEXT10_VAL TEXT,PARENT_TXN_ID TEXT,PARENT_TXN_AMOUNT TEXT,PARENT_TXN_AMOUNT_CUR TEXT,CHARGE_AMOUNT TEXT,CHARGE_AMOUNT_CUR TEXT,CGST TEXT,SGST TEXT,IGST TEXT,UGST TEXT,SUB_TYPE TEXT,ENDING_BALANCE TEXT)"))
          qDebug() << "16."  << query.lastError();

        qDebug() << "Database Created" << endl;
        ret = true;
    }

    return ret;
}


bool Database::openDB()
{
    db = QSqlDatabase::addDatabase("QSQLITE");
    db.setDatabaseName("/usr/FINO/FPB/fpbdatabase.db");  // akshayJ changes 19 NOv 15
    return db.open();
}


bool Database::closeDB()
{
    db.close();
    return true;
}

